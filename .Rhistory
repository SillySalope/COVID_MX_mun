pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos)) %>% #cumsum, suma acumulada
ungroup()
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos", #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos)) %>% #cumsum, suma acumulada
ungroup()
?pivot_longer
#Asi, solo necesitas seleccionar que fecha quieres para graficar todos los casos de todos los municipios de cierta fecha
?values_transform
#Asi, solo necesitas seleccionar que fecha quieres para graficar todos los casos de todos los municipios de cierta fecha
??values_transform
p <- cases %>%
# 10 random cities
#filter(id %in% sample(unique(id), 10)) %>%
filter(fecha == "28-07-2020") %>%
ggplot() +
aes(x = name, y = casos_acum) +
coord_flip() +
geom_col() +
transition_time(fecha) +
ease_aes('cubic-in-out') +
exit_fade() +
labs(
title = 'Casos Confirmados Acumulados',
subtitle = '{frame_time}'
)
p
p <- cases %>%
# 10 random cities
filter(id %in% sample(unique(id), 10)) %>%
filter(fecha == "28-07-2020") %>%
ggplot() +
aes(x = name, y = casos_acum) +
coord_flip() +
geom_col() +
transition_time(fecha) +
ease_aes('cubic-in-out') +
exit_fade() +
labs(
title = 'Casos Confirmados Acumulados',
subtitle = '{frame_time}'
)
p
p <- casos_covid_municipio %>%
# 10 random cities
filter(id %in% sample(unique(id), 10)) %>%
filter(fecha == "28-07-2020") %>%
ggplot() +
aes(x = nombre, y = casos_acum) +
coord_flip() +
geom_col() +
transition_time(fecha) +
ease_aes('cubic-in-out') +
exit_fade() +
labs(
title = 'Casos Confirmados Acumulados',
subtitle = '{frame_time}'
)
p
p <- casos_covid_municipio %>%
# 10 random cities
filter(id %in% sample(unique(id), 10)) %>%
#filter(fecha == "28-07-2020") %>%
ggplot() +
aes(x = nombre, y = casos_acum) +
coord_flip() +
geom_col() +
transition_time(fecha) +
ease_aes('cubic-in-out') +
exit_fade() +
labs(
title = 'Casos Confirmados Acumulados',
subtitle = '{frame_time}'
)
p
p <- casos_covid_municipio %>%
# 10 random cities
#filter(id %in% sample(unique(id), 10)) %>%
#filter(fecha == "28-07-2020") %>%
ggplot() +
aes(x = nombre, y = casos_acum) +
coord_flip() +
geom_col() +
transition_time(fecha) +
ease_aes('cubic-in-out') +
exit_fade() +
labs(
title = 'Casos Confirmados Acumulados',
subtitle = '{frame_time}'
)
p
library(reshape2)
casos_covid_municipio_1 <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
)
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id",matches("\\d{2}-\\d{2}-\\d{4}")))
View(casos_covid_municipio_1)
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id","\\d{2}-\\d{2}-\\d{4}"))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id","matches(\\d{2}-\\d{2}-\\d{4})"))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c(matches(\\d{2}-\\d{2}-\\d{4})))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c(matches(\\d{2}-\\d{2}-\\d{4}))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c(id))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id"))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id",matches(\\d{2}-\\d{2}-\\d{4})))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id",matches("\\d{2}-\\d{2}-\\d{4}")))
fechas <- colnames(casos_covid_municipio_1) %>%
filter(matches("\\d{2}-\\d{2}-\\d{4}"))
fechas <- colnames(casos_covid_municipio_1)[matches("\\d{2}-\\d{2}-\\d{4}")]
fechas <- colnames(casos_covid_municipio_1)
fechas_2 <- fechas[4:172]
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id",c(fechas_2)))
View(casos_covid_municipio_2)
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id"))
View(casos_covid_municipio_2)
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos", #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
mutate(casos_acum_100 = (casos_acum/poblacion)*100000))  #ajustada por poblacion
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos", #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
mutate(casos_acum_100 = (casos_acum/poblacion)*100000))  #ajustada por poblacion
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
mutate(casos_acum_100 = (casos_acum/poblacion)*100000))  #ajustada por poblacion
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
mutate(casos_acum_100 = (casos_acum/poblacion)*100000)) %>%   #ajustada por poblacion
ungroup()
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/poblacion)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = (cumsum(casos_nuevos)/poblacion)*100000) %>%
ungroup()
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = (cumsum(casos_nuevos)/pop)*100000) %>%
ungroup()
View(casos_covid_municipio)
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id",fechas_2))
View(casos_covid_municipio_2)
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id"))
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c(fechas_2,"id"))
View(casos_covid_municipio_2)
casos_covid_municipio_2 <-  melt(casos_covid_municipio_1, id=c("id"))
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- cast(casos_covid_municipio_2, nombre ~ fechas_2, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, nombre ~ fechas_2, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id ~ fechas_2, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id ~ fechas_2, cumsum)
casos_covid_municipio$casos_acum_100 <- sprintf("%3.2f", casos_covid_municipio$casos_acum_100)
v
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = sprintf("%3.2f", (100000 * (cumsum(casos_nuevos)/pop)))) %>%
ungroup()
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio$casos_acum_100 <- sprintf("%3.2f", casos_covid_municipio$casos_acum_100) #make it less decimal
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id + fechas_2~ , cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id + fechas_2~, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id + fechas_2~ nombre, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id ~ fechas_2, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id ~, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id + c(fechas_2)~, cumsum)
#(mydata, id=c("id_variable_1","id_variable_2")) #you're creating a vector of identifiers, whatever should categorize but NOT be added
casos_cast <- dcast(casos_covid_municipio_2, id~c(fechas_2), cumsum)
casos_covid_municipio %>%
write_csv() %>%
"DATA/Acumulados_al_20200628.csv"
casos_covid_municipio %>%
write_csv("DATA/Acumulados_al_20200628.csv")
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio$casos_acum_100 <- sprintf("%3.2f", casos_covid_municipio$casos_acum_100) #make it less decimal
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
#mutate(casos_acum = cumsum(casos_nuevos) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio$casos_acum_100 <- sprintf("%3.2f", casos_covid_municipio$casos_acum_100) #make it less decimal
casos_covid_municipio %>%
write_csv("DATA/Acumulados_al_20200628.csv")
casos_covid_municipio %>%
write_csv("C:/Users/Mariano/Documents/ArcGIS/MEX/COVID_19_SSA_Mex/DATA/Acumulados_al_20200628.csv")
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos)) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio$casos_acum_100 <- sprintf("%3.2f", casos_covid_municipio$casos_acum_100) #make it less decimal
casos_covid_municipio[matches("\\d{2}-\\d{2}-\\d{4}")] <- NULL #No necesito las columnas por cada fecha ya, las tengo como filas
casos_covid_municipio[fechas_2] <-NULL
View(casos_covid_municipio)
casos_covid_municipio[matches("\\d{2}-\\d{2}-\\d{4}")] <- NULL #No necesito las columnas por cada fecha ya, las tengo como filas
casos_covid_municipio[colnames %in% c(fechas_2)] <-NULL
casos_covid_municipio[colnames %in% c("fechas_2")] <-NULL
casos_covid_municipio[colnames %in% fechas_2] <-NULL
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos)) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio$casos_acum_100 <- sprintf("%3.2f", casos_covid_municipio$casos_acum_100) #make it less decimal
casos_covid_municipio[4:65] <-NULL
casos_covid_municipio <- "DATA/Casos_Diarios_Municipio_Confirmados_20200628.csv" %>%
read_csv() %>%
rename( #cambiar nombres a columnas para claridad y comodidad
id = cve_ent,
pop = poblacion,
nombre = nombre
) %>%
pivot_longer(
cols = matches("\\d{2}-\\d{2}-\\d{4}"), #los pivotes seran solo columnas que sean fechas
names_to = "fecha",
#names_transform = list(fecha = dmy),
values_to = "casos_nuevos"#, #alargar (mas filas) el dataset agregando un valor/una fila por cada municipio + fecha
#values_transform = list(fecha = as.integer)
) %>%
arrange(id, fecha) %>%
group_by(id) %>% #agrupar por municipio
mutate(casos_acum = cumsum(casos_nuevos)) %>% #cumsum, suma acumulada
#mutate(casos_acum_100 = (casos_acum/pop)*100000)) %>%   #ajustada por poblacion
mutate(casos_acum_100 = 100000 * (cumsum(casos_nuevos)/pop)) %>%
ungroup()
casos_covid_municipio$casos_acum_100 <- sprintf("%3.2f", casos_covid_municipio$casos_acum_100) #make it less decimal
casos_covid_municipio[matches("\\d{2}-\\d{2}-\\d{4}")] <- NULL #No necesito las columnas por cada fecha ya, las tengo como filas
casos_covid_municipio[4:64] <-NULL
casos_covid_municipio %>%
write_csv("C:/Users/Mariano/Documents/ArcGIS/MEX/COVID_19_SSA_Mex/DATA/Acumulados_al_20200628.csv")

# 1_CAPRICORN
# CYPRESS HILLS LOCAL DEVELOPMENT CORPORATION
# AUTOR: Mariano Moran based completely on Maxwell Austensen's work for HDC
# DATE: 1/23/2019
# PURPOSE: This program gets the already cleaned up Capricorn dataset and joins it to BBLs

# A program like this should tackle Counselor Max and ETO

# Load Tidyverse Packages -------------------------------------------------

library(dplyr) # manipulate dataframes
library(readr) # read/write dataframes
library(tidyr) # reshaping dataframes
library(stringr) # string manipulation
library(forcats) # factor manipulation
library(purrr) # iteration (instead of loops)
library(ggplot2) # making plots
library(remotes)
library(stringr)
library(sf)
library(mapview)

###################### 2. Import Clients Data #############################

capricorn_clients_01232019 <- read_csv("DATA/Capricorn_011719.csv")

capricorn_clients_01232019 <- read_csv(
  file = "Capricorn_011719.csv",
  col_types = cols(
    .default = col_character()
  )
)

capricorn_clients_01232019

glimpse(capricorn_clients_01232019)

#Count not valid addresses
cap_clients_w_address <- capricorn_clients_01232019 %>% 
  summarize(
    ADDRESS_NA = sum(is.na(ADDRESS_REGISTERED)),
    STREET_NA = sum(is.na(STREET_MAPPED))
  )

glimpse(cap_clients_w_address)
cap_clients_w_address

#Count (unique)valid addresses
cap_clients_count <- count(capricorn_clients_01232019, vars = "FULL_NAME","CAP_ID","STREET_MAPPED","ADDRESS_REGISTERED")
glimpse(cap_clients_count)

#Separate addresses into number, street, borough, zip
cap_clients_for_geocode <- separate(capricorn_clients_01232019, ADDRESS_REGISTERED, c("HOUSE_NUM","street","street2"), sep = "[:blank:]+",
                                    remove = FALSE, convert = FALSE, extra = "warn", fill = "warn")

#Change column names in capricorn
colnames(cap_clients_for_geocode)[colnames(cap_clients_for_geocode) == 'CAP_ID'] <- 'PROGRAM_UNIQUE_ID'
colnames(cap_clients_for_geocode)[colnames(cap_clients_for_geocode) == 'CAP_CASE_ID'] <- 'PROGRAM_CASE_ID'
glimpse(cap_clients_for_geocode)

#Unite streets!
cap_clients_for_geocode_2 <- unite(cap_clients_for_geocode, HOUSE_ST, c("street", "street2"), sep = " ", remove = TRUE)
glimpse(cap_clients_for_geocode_2)

###################### 3. Geocoding addresses with Geoclient API #############################

#remotes::install_github("austensen/geoclient")
library(geoclient)

glimpse(cap_clients_for_geocode)

?geoclient_api_keys

geoclient_api_keys(
  id="61f93db6",
  key="64e241b2bd01e5a8ffdf19540a5c24cc",
  overwrite = TRUE,
  install = TRUE)

readRenviron("~/.Renviron")

##### Using geo_info
cap_geo_info <- cap_clients_for_geocode_2 %>% 
  geo_address_data(HOUSE_NUM, HOUSE_ST, BOROUGH, ZIP) %>% 
  select(
    bbl, 
    bin = buildingIdentificationNumber, 
    tract_2010 = censusTract2010,
    cd = communityDistrict,
    nta,
    lat = latitudeInternalLabel,
    lng = longitudeInternalLabel
  )

#wait for it to reach 100%!
glimpse(cap_geo_info)
write_rds(cap_geo_info, "data/cap_geo_info.rds")
cap_geo_info <- read_rds("data/cap_geo_info.rds")

#Create csv
capricorn_clients_bbls <- bind_cols(cap_clients_for_geocode_2, cap_geo_info)
write.csv(capricorn_clients_bbls, file = "DATA/capricorn_clients_bbls.csv")


glimpse(capricorn_clients_bbls)

clients_wo_bbl <- capricorn_clients_bbls %>% 
  summarize(
    no_bbl = sum(is.na(bbl))
  )

clients_wo_bbl

############################ 4. MAPPING ###########################

#Using library(sf) to map
capricorn_spatial <- capricorn_clients_bbls%>% 
  filter(!is.na(lng),
         !is.na(lat)
  )

capricorn_map <- st_as_sf(capricorn_spatial, coords = c("lng", "lat"), crs = 4326)

capricorn_map

#filter for different years???

#Using library(mapview) to view it

mapview(capricorn_map)
